{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PhoneInput from \"react-native-phone-number-input\";\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Contactinputs = function Contactinputs() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    formattedValue = _useState4[0],\n    setFormattedValue = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    valid = _useState6[0],\n    setValid = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showMessage = _useState8[0],\n    setShowMessage = _useState8[1];\n  var phoneInput = useRef < PhoneInput > null;\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\"\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsxs(SafeAreaView, {\n        style: styles.wrapper,\n        children: [showMessage && _jsxs(View, {\n          style: styles.message,\n          children: [_jsxs(Text, {\n            children: [\"Value : \", value]\n          }), _jsxs(Text, {\n            children: [\"Formatted Value : \", formattedValue]\n          }), _jsxs(Text, {\n            children: [\"Valid : \", valid ? \"true\" : \"false\"]\n          })]\n        }), _jsx(PhoneInput, {\n          ref: phoneInput,\n          defaultValue: value,\n          defaultCode: \"DM\",\n          layout: \"first\",\n          onChangeText: function onChangeText(text) {\n            setValue(text);\n          },\n          onChangeFormattedText: function onChangeFormattedText(text) {\n            setFormattedValue(text);\n          },\n          withDarkTheme: true,\n          withShadow: true,\n          autoFocus: true\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            var _phoneInput$current;\n            var checkValid = (_phoneInput$current = phoneInput.current) == null ? void 0 : _phoneInput$current.isValidNumber(value);\n            setShowMessage(true);\n            setValid(checkValid ? checkValid : false);\n          },\n          children: _jsx(Text, {\n            children: \"Check\"\n          })\n        })]\n      })\n    })]\n  });\n};\nexport default Contactinputs;","map":{"version":3,"names":["React","useState","useRef","PhoneInput","Colors","Contactinputs","value","setValue","formattedValue","setFormattedValue","valid","setValid","showMessage","setShowMessage","phoneInput","styles","container","wrapper","message","text","button","checkValid","current","isValidNumber"],"sources":["C:/Users/Einar/OneDrive/Documents/app development/1/Contactor/src/components/Contactinputs/index.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  StatusBar,\r\n  TouchableOpacity,\r\n  Text,\r\n} from \"react-native\";\r\nimport PhoneInput from \"react-native-phone-number-input\";\r\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\r\n\r\nconst Contactinputs = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [formattedValue, setFormattedValue] = useState(\"\");\r\n  const [valid, setValid] = useState(false);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const phoneInput = useRef<PhoneInput>(null);\r\n  return (\r\n    <>\r\n      <StatusBar barStyle=\"dark-content\" />\r\n      <View style={styles.container}>\r\n        <SafeAreaView style={styles.wrapper}>\r\n          {showMessage && (\r\n            <View style={styles.message}>\r\n              <Text>Value : {value}</Text>\r\n              <Text>Formatted Value : {formattedValue}</Text>\r\n              <Text>Valid : {valid ? \"true\" : \"false\"}</Text>\r\n            </View>\r\n          )}\r\n          <PhoneInput\r\n            ref={phoneInput}\r\n            defaultValue={value}\r\n            defaultCode=\"DM\"\r\n            layout=\"first\"\r\n            onChangeText={(text) => {\r\n              setValue(text);\r\n            }}\r\n            onChangeFormattedText={(text) => {\r\n              setFormattedValue(text);\r\n            }}\r\n            withDarkTheme\r\n            withShadow\r\n            autoFocus\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              const checkValid = phoneInput.current?.isValidNumber(value);\r\n              setShowMessage(true);\r\n              setValid(checkValid ? checkValid : false);\r\n            }}\r\n          >\r\n            <Text>Check</Text>\r\n          </TouchableOpacity>\r\n        </SafeAreaView>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contactinputs;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAShD,OAAOC,UAAU,MAAM,iCAAiC;AACxD,SAASC,MAAM,QAAQ,qCAAqC;AAAC;AAAA;AAAA;AAE7D,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAS;EAC1B,gBAA0BJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BK,KAAK;IAAEC,QAAQ;EACtB,iBAA4CN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjDO,cAAc;IAAEC,iBAAiB;EACxC,iBAA0BR,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlCS,KAAK;IAAEC,QAAQ;EACtB,iBAAsCV,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9CW,WAAW;IAAEC,cAAc;EAClC,IAAMC,UAAU,GAAGZ,MAAM,GAACC,UAAU,GAAE,IAAK;EAC3C,OACE;IAAA,WACE,KAAC,SAAS;MAAC,QAAQ,EAAC;IAAc,EAAG,EACrC,KAAC,IAAI;MAAC,KAAK,EAAEY,MAAM,CAACC,SAAU;MAAA,UAC5B,MAAC,YAAY;QAAC,KAAK,EAAED,MAAM,CAACE,OAAQ;QAAA,WACjCL,WAAW,IACV,MAAC,IAAI;UAAC,KAAK,EAAEG,MAAM,CAACG,OAAQ;UAAA,WAC1B,MAAC,IAAI;YAAA,uBAAUZ,KAAK;UAAA,EAAQ,EAC5B,MAAC,IAAI;YAAA,iCAAoBE,cAAc;UAAA,EAAQ,EAC/C,MAAC,IAAI;YAAA,uBAAUE,KAAK,GAAG,MAAM,GAAG,OAAO;UAAA,EAAQ;QAAA,EAElD,EACD,KAAC,UAAU;UACT,GAAG,EAAEI,UAAW;UAChB,YAAY,EAAER,KAAM;UACpB,WAAW,EAAC,IAAI;UAChB,MAAM,EAAC,OAAO;UACd,YAAY,EAAE,sBAACa,IAAI,EAAK;YACtBZ,QAAQ,CAACY,IAAI,CAAC;UAChB,CAAE;UACF,qBAAqB,EAAE,+BAACA,IAAI,EAAK;YAC/BV,iBAAiB,CAACU,IAAI,CAAC;UACzB,CAAE;UACF,aAAa;UACb,UAAU;UACV,SAAS;QAAA,EACT,EACF,KAAC,gBAAgB;UACf,KAAK,EAAEJ,MAAM,CAACK,MAAO;UACrB,OAAO,EAAE,mBAAM;YAAA;YACb,IAAMC,UAAU,0BAAGP,UAAU,CAACQ,OAAO,qBAAlB,oBAAoBC,aAAa,CAACjB,KAAK,CAAC;YAC3DO,cAAc,CAAC,IAAI,CAAC;YACpBF,QAAQ,CAACU,UAAU,GAAGA,UAAU,GAAG,KAAK,CAAC;UAC3C,CAAE;UAAA,UAEF,KAAC,IAAI;YAAA;UAAA;QAAa,EACD;MAAA;IACN,EACV;EAAA,EACN;AAEP,CAAC;AAED,eAAehB,aAAa"},"metadata":{},"sourceType":"module"}
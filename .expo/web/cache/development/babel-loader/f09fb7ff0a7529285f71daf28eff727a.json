{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useRef } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Image, Center, Popover, Button, Input, FormControl, Box, NativeBaseProvider } from \"native-base\";\nimport PhoneInput from \"react-native-phone-number-input\";\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\nimport styles from \"../../views/Contact/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Contactimage = function Contactimage() {\n  return _jsx(Center, {\n    children: _jsx(Image, {\n      size: 150,\n      borderRadius: 100,\n      source: {\n        uri: \"https://wallpaperaccess.com/full/317501.jpg\"\n      },\n      alt: \"Alternate Text\"\n    })\n  });\n};\nvar PhoneNumberInput = function PhoneNumberInput(_ref) {\n  _objectDestructuringEmpty(_ref);\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    formattedValue = _useState4[0],\n    setFormattedValue = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    valid = _useState6[0],\n    setValid = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showMessage = _useState8[0],\n    setShowMessage = _useState8[1];\n  var phoneInput = useRef(null);\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    PhoneNumber = _useState10[0],\n    setPhoneNumber = _useState10[1];\n  setPhoneNumber(formattedValue);\n\n  return _jsx(Center, {\n    children: _jsxs(SafeAreaView, {\n      style: styles.wrapper,\n      children: [showMessage && _jsxs(View, {\n        style: styles.message,\n        children: [_jsxs(Text, {\n          children: [\"Value : \", value]\n        }), _jsxs(Text, {\n          children: [\"Formatted Value : \", formattedValue]\n        }), _jsxs(Text, {\n          children: [\"Valid : \", valid ? \"true\" : \"false\"]\n        })]\n      }), _jsx(PhoneInput, {\n        ref: phoneInput,\n        defaultValue: value,\n        defaultCode: \"DM\",\n        layout: \"first\",\n        onChangeText: function onChangeText(text) {\n          setValue(text);\n        },\n        onChangeFormattedText: function onChangeFormattedText(text) {\n          setFormattedValue(text);\n        },\n        withDarkTheme: true,\n        withShadow: true,\n        autoFocus: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          var _phoneInput$current;\n          var checkValid = (_phoneInput$current = phoneInput.current) == null ? void 0 : _phoneInput$current.isValidNumber(value);\n          setShowMessage(true);\n          setValid(checkValid ? checkValid : false);\n        },\n        children: _jsx(Text, {\n          children: \"Check\"\n        })\n      })]\n    })\n  });\n};\nvar AddImage = function AddImage() {\n  var initialFocusRef = React.useRef(null);\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    ImageUrl = _useState12[0],\n    setImageUrlValue = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isOpen = _useState14[0],\n    setIsOpen = _useState14[1];\n  var SaveImage = function SaveImage() {\n    console.log(\"Image url\", ImageUrl);\n    setIsOpen(false);\n  };\n  console.log(isOpen);\n  return _jsx(Box, {\n    w: \"100%\",\n    alignItems: \"center\",\n    children: _jsx(Popover, {\n      initialFocusRef: initialFocusRef,\n      trigger: function trigger(triggerProps) {\n        return _jsx(Button, _objectSpread(_objectSpread({}, triggerProps), {}, {\n          onPress: function onPress() {\n            return setIsOpen(true);\n          },\n          children: \"Edit Info \"\n        }));\n      },\n      isOpen: isOpen,\n      onClose: function onClose() {\n        return setIsOpen(!isOpen);\n      },\n      children: _jsxs(Popover.Content, {\n        width: \"56\",\n        children: [_jsx(Popover.Arrow, {}), _jsx(Popover.CloseButton, {\n          onPress: function onPress() {\n            return setIsOpen(false);\n          }\n        }), _jsx(Popover.Header, {\n          children: \"Add Image With\"\n        }), _jsxs(Popover.Body, {\n          children: [_jsx(FormControl, {\n            children: _jsx(Button, {\n              children: \"Camera\"\n            })\n          }), _jsx(FormControl, {\n            mt: \"3\",\n            children: _jsx(Button, {\n              children: \"From Gallery\"\n            })\n          }), _jsx(FormControl, {\n            mt: \"3\",\n            children: _jsx(Input, {\n              onChangeText: function onChangeText(newText) {\n                return setImageUrlValue(newText);\n              },\n              variant: \"outline\",\n              placeholder: \"Image URL\"\n            })\n          })]\n        }), _jsx(Popover.Footer, {\n          children: _jsx(Button, {\n            onPress: SaveImage,\n            children: \"Save\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar Addcontact = function Addcontact(_ref2) {\n  var route = _ref2.route;\n  var number = route.params.number;\n  return _jsxs(NativeBaseProvider, {\n    children: [_jsx(Contactimage, {}), _jsx(AddImage, {}), _jsx(PhoneNumberInput, {})]\n  });\n};\nexport default Addcontact;","map":{"version":3,"names":["React","useState","useRef","Image","Center","Popover","Button","Input","FormControl","Box","NativeBaseProvider","PhoneInput","Colors","styles","Contactimage","uri","PhoneNumberInput","value","setValue","formattedValue","setFormattedValue","valid","setValid","showMessage","setShowMessage","phoneInput","PhoneNumber","setPhoneNumber","wrapper","message","text","button","checkValid","current","isValidNumber","AddImage","initialFocusRef","ImageUrl","setImageUrlValue","isOpen","setIsOpen","SaveImage","console","log","triggerProps","newText","Addcontact","route","number","params"],"sources":["C:/Users/Einar/OneDrive/Documents/app development/1/Contactor/src/views/Addcontact/index.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  StatusBar,\r\n  TouchableOpacity,\r\n  Text,\r\n} from \"react-native\";\r\nimport {\r\n  Image,\r\n  Center,\r\n  Popover,\r\n  Button,\r\n  Input,\r\n  FormControl,\r\n  Box,\r\n  NativeBaseProvider,\r\n} from \"native-base\";\r\nimport PhoneInput from \"react-native-phone-number-input\";\r\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\r\nimport styles from \"../../views/Contact/styles\";\r\n\r\n\r\nconst Contactimage = () => {\r\n  return (\r\n    <Center>\r\n      <Image\r\n        size={150}\r\n        borderRadius={100}\r\n        source={{\r\n          uri: \"https://wallpaperaccess.com/full/317501.jpg\",\r\n        }}\r\n        alt=\"Alternate Text\"\r\n      />\r\n    </Center>\r\n  );\r\n};\r\n\r\nconst PhoneNumberInput = ({}) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [formattedValue, setFormattedValue] = useState(\"\");\r\n  const [valid, setValid] = useState(false);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const phoneInput = useRef(null);\r\n  const [PhoneNumber, setPhoneNumber] = useState(\"\");\r\n    setPhoneNumber(formattedValue);\r\n    // return PhoneNumber;\r\n    \r\n  return (\r\n    <Center>\r\n      <SafeAreaView style={styles.wrapper}>\r\n        {showMessage && (\r\n          <View style={styles.message}>\r\n            <Text>Value : {value}</Text>\r\n            <Text>Formatted Value : {formattedValue}</Text>\r\n            <Text>Valid : {valid ? \"true\" : \"false\"}</Text>\r\n          </View>\r\n        )}\r\n        <PhoneInput\r\n          ref={phoneInput}\r\n          defaultValue={value}\r\n          defaultCode=\"DM\"\r\n          layout=\"first\"\r\n          onChangeText={(text) => {\r\n            setValue(text);\r\n          }}\r\n          onChangeFormattedText={(text) => {\r\n            setFormattedValue(text);\r\n          }}\r\n          withDarkTheme\r\n          withShadow\r\n          autoFocus\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={() => {\r\n            const checkValid = phoneInput.current?.isValidNumber(value);\r\n            setShowMessage(true);\r\n            setValid(checkValid ? checkValid : false);\r\n          }}\r\n        >\r\n          <Text>Check</Text>\r\n        </TouchableOpacity>\r\n      </SafeAreaView>\r\n    </Center>\r\n  );\r\n};\r\nconst AddImage = () => {\r\n  const initialFocusRef = React.useRef(null);\r\n  const [ImageUrl, setImageUrlValue] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const SaveImage = () => {\r\n    console.log(\"Image url\", ImageUrl);\r\n    setIsOpen(false);\r\n  };\r\n  console.log(isOpen);\r\n  return (\r\n    <Box w=\"100%\" alignItems=\"center\">\r\n      <Popover\r\n        initialFocusRef={initialFocusRef}\r\n        trigger={(triggerProps) => {\r\n          return <Button {...triggerProps} onPress={() => setIsOpen(true)}>Edit Info </Button>;\r\n        }}\r\n        isOpen={isOpen} onClose={() => setIsOpen(!isOpen)}>\r\n        <Popover.Content width=\"56\">\r\n          <Popover.Arrow />\r\n          <Popover.CloseButton onPress={() => setIsOpen(false)}/>\r\n          <Popover.Header>Add Image With</Popover.Header>\r\n          <Popover.Body>\r\n            <FormControl>\r\n            <Button>Camera</Button>\r\n            </FormControl>\r\n            <FormControl mt=\"3\">\r\n            <Button>From Gallery</Button>\r\n            </FormControl>\r\n            <FormControl mt=\"3\">\r\n              <Input \r\n            onChangeText={newText => setImageUrlValue(newText)}\r\n            variant=\"outline\" placeholder=\"Image URL\" />\r\n            </FormControl>\r\n          </Popover.Body>\r\n          <Popover.Footer>\r\n              <Button onPress={SaveImage}>Save</Button>\r\n          </Popover.Footer>\r\n        </Popover.Content>\r\n      </Popover>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Addcontact = ({route}) => {\r\n    const {number} = route.params;\r\n\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n        <Contactimage />\r\n        <AddImage />\r\n        <PhoneNumberInput />\r\n    </NativeBaseProvider>\r\n  );\r\n};\r\n\r\nexport default Addcontact;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}